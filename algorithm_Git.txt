Алгоритм Git

Подготовительный этап

Вариант 1

1. Создать папку проекта и зайти в нее через Git Bash
2. Инициализировать локальный репозиторий Git: git init
3. Подключить удаленный репозиторий: git remote add origin <url репозитория на гитхабе (или гогите)> (origin - краткое название репозитория по умолчанию, можно указать свое)
4. Стянуть удаленный репозиторий на локальный компьютер: git pull origin master

Вариант 2

5. Клонировать существующий репозиторий (шаг 1-4 в автоматическом режиме): git clone <url репозитория на гитхабе> (папка проекта будет создана в директории, в которой в этот момент находится Git Bash)

Проверить подключенные репозитории: git remote -v

Работа с Git

1. Создаем в папке проекта файлы, работаем с ними.
2. Добавляем файлы в индекс на локальном компьютере для фиксации изменений: git add <filename>
3. Если файл после добавления в индекс изменялся, чтобы зафиксировать новые изменения, нужно еще раз воспользоваться коммандой add
4. Делаем коммит для создания снимка состояния проекта со всеми файлами, попавшими в индекс: git commit -m "комментарий"
4.1. Проверка состояния коммитов: git log
5. Изменение последнего коммита: git commit -m "комментарий" --amend (если, например, забыли добавить в индекс какой-нибудь файл)
6. Перед заливкой коммитов на удаленный репозиторий, сначала делаем pull, для получения последних версий файлов. 
7. Заливаем сохраненные коммиты на удаленный репозиторий: git push -u origin master
8. Повторяем шаги 1-7

Проверка состояния проекта: git status

!!!Помни падаван, сначала Pull, потом Push!!!

Работа с форками на гитхабе (и гогите тоже)

Если мы форкнули оригинальный репозиторий и хотим работать с форком:
1. См. Подготовительный этап Вариант 1/2. Вместо url оригинального депозитория, указываем url форка.
2. См. Работа с Git. Вместо пунктов 6-7, см.ниже 

Для обновления форков локального и удаленного репозиториев:
1. Добавляем ссылку на оригинальный репозиторий и назовем ее, например, upstream: git remote add upstream <url оригинального репозитория>
2. Забираем обновления с оригинального репозитория без обновления локальных файлов: git fetch upstream
3. Сливаем ветку master с нашей текущей локальной веткой: git merge -m "комментарий" upstream/master
4. Заливаем обновления на наш удаленный форкнутый репозиторий: git push -u origin master 