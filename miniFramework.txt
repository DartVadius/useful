Минифрэймворк MVC

Правила именования файлов, классов и директорий:
1) Один файл -> один класс
2) Имя файла совпадает с именем класса в файле
3) Имя файла/класса содержит название директории, которой находится файл. Название директории прописывается в конце имени файла/класса, с заглавной буквы. 
4) В папке с представлениями (view) для каждого класса модели создается отдельная директория, в которой находится файл index.php (основное представление) и файлы с дополнительными представлениями ???
5) В папке layout (в view) находятся статические шаблоны (футер и хедер)
6) Названия методов контроллера состоят из имени страницы представления и заканчиваются на Action. Важно! Core application по умолчанию считает, что названия файлов контроллеров заканчиваются на Controller; названия методов контроллера заканчиваются на Action, а начинаются с имени файла представления, которое выводит этот метод???
 
Структура папок

Фреймоврк состоит из 2х основных частей:
1. Папка Public. Доступна для пользователей. Там находятся папки CSS, JS, Images и т.д. и файл index.php, который запускается при  старте приложения.
2. Папка Application. Закрыта для пользователей. Там хранится вся логика приложения: модели, контроллеры, представления. 

Application

Config: автолоадер классов и константы для подключения БД
Core: ядро, базовый класс Application, инициализирующий запуск приложения и обрабатывающий запросы 
Lib: классы вспомогательных библиотек (PDO, логгер)
Model: классы моделей (одна модель -> одна таблица в БД), содержат только те методы, которые относятся к свойствам класса
Repository: классы, которые содержат методы для создания объектов и коллекций объектов
Validate: вспомогательные классы-валидаторы
Controller: контроллеры
View: файлы представлениий 

Контроллер
1. Все вызовы экземпляров класса и их методов, валидация, перенаправление на вьюшки и прочие действия происходят в контроллере
2. В контроллере происходит сборка представления страницы: инклудятся хедер, футер и боди


Порядок работы приложения

Файлы .htaccess

1. В корне находится файл .htaccess, который перенаправляет вызовы в папку Public на index.php.
2. В папке Public находится файл htaccess, который:
а) отключает директиву MultiViews 
б) запускает модуль Mod_rewrite, который предоставляет 'основанный на правилах механизм динамического изменения запрашиваемых URL-ов'
в) Запрещает отображение содержимого каталога при отсутствии индексного файла (Options -Indexes)
г) перезаписывает URL, кроме случаев следующих исключений: запрашиваемый файл является реальной дерикторий, запрашиваемый файл  реально существует, запрашиваемый файл является символьной ссылкой. Во всех остальных случаях обращение к файлу передается в файл index.php как URL запрос, строка доп.параметров запроса от исходного URL добавляется в качестве дополнительных параметров запроса. После этого работа файла .htaccess прекращается

Дополнительно: запрещаем внешний доступ к файлу .htaccess (RewriteRule ^.htaccess$ - [F])

Принцип построения URL:
имя_приложения/имя_контроллера/имя_метода_контроллера/доп_параметр_1/доп_параметр_2/доп_параметр_etc


Файлы приложения
1. Запускается файл index.php в папке Public:
а) записываем константы с путями к корневому каталогу и к каталогу Application
б) поключаем файлы config.php и application.php (ядро приложения)
в) Запускаем приложение: создаем экземпляр класса Application и запускаем метод Run()

Класс Application 
Свойства класса:
$url_controller - сначала содержит имя контроллера, потом в свойство перезаписывается экземпляр класса контроллера???
$url_action - содержит имя метода контроллера
$url_params - массив с дополнительными параметрами запроса

Метод класса Run():
а) Вызывает вспомогательный метод splitUrl(), который разбивает URL из GET-запроса по разделителю '/' и присваивает результат соответствующим свойствам класса
Что с POST запросами????
б) Если контроллер/экшен не переданы, то запускается контроллер/экшен по умолчанию
в) Если переданы, то проверяется существование файла контроллера и существование метода в контроллере и запускается запрашиваемый метод с переданными параметрами (если переданны параметры с нулевой динной, то запускается контроллер/экшен по умолчанию)
г) В противном случае происходит редиррект на страницу ошибки
